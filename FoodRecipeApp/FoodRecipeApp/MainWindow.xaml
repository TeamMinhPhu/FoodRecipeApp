<Window x:Class="FoodRecipeApp.MainWindow"
        
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FoodRecipeApp"
        mc:Ignorable="d" 
        Title="MainWindow" Height="500" Width="900"
        WindowStartupLocation="CenterScreen" 
        Loaded="Window_Loaded" WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip"
        Background="#fff">
    <Window.Resources>
        <!--menu animation-->
        <Storyboard x:Key="openMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="43.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-43.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle2">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="MenuBar">
                <EasingDoubleKeyFrame KeyTime="0" Value="60"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="250"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="closeMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="43.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="rectangle1">
                <EasingDoubleKeyFrame KeyTime="0" Value="-43.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle2">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="MenuBar">
                <EasingDoubleKeyFrame KeyTime="0" Value="250"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="60"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--Close button - turnoff button style-->
        <Style x:Key="closeButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#54545454"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Menu style-->

        <Style x:Key="MenuStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ListMenuStyle-->
        <Style x:Key="ListMenuStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="5 0 0 0" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="0.35"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="0.7"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#fff"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="0.25"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#fff"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueDarkBrush}" Padding="0 2 0 0">
        <DockPanel>

            <!--Title bar-->
            <!--"=#ff9100-->
            <Grid Name="TitleBar" Height="30" VerticalAlignment="Top" DockPanel.Dock="Top" Background="#ff9100" Margin="0 -2 0 0">
                <TextBlock Text="Food Recipes" VerticalAlignment="Center" FontWeight="Bold" Foreground="#fff" Margin="10 0 0 0"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="minimizeProgramButton"
                    Panel.ZIndex="10"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Right"
                    Margin="0"
                    Height="30" Width="40"
                    BorderThickness="0"
                    Style="{StaticResource closeButton}" Click="minimizeProgramButton_Click">

                        <Grid Width="12" Height="12">
                            <Image Source="Resources/Icons/minimize.png" RenderOptions.BitmapScalingMode="HighQuality"
                                Stretch="Fill"/>
                        </Grid>
                    </Button>
                    
                    <Button x:Name="maximizeProgramButton"
                    Panel.ZIndex="10"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Right"
                    Margin="0"
                    Height="30" Width="40"
                    BorderThickness="0"
                    Style="{StaticResource closeButton}" Click="maximizeProgramButton_Click">

                        <Grid Width="12" Height="12">
                            <Image Name="maximizeButtonImage" Source="Resources/Icons/maximize.png" RenderOptions.BitmapScalingMode="HighQuality"
                                Stretch="Fill"/>
                        </Grid>
                    </Button>
                    
                    <Button x:Name="closeProgramButton"
                    Panel.ZIndex="10"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Right"
                    Margin="0"
                    Height="30" Width="40"
                    BorderThickness="0"
                    Style="{StaticResource closeButton}" Click="closeProgramButton_Click">

                        <Grid Width="12" Height="12">
                            <Image Source="Resources/Icons/close.png" RenderOptions.BitmapScalingMode="HighQuality"
                                Stretch="Fill"/>
                        </Grid>
                    </Button>
                </StackPanel>
            </Grid>

            <Grid x:Name="MenuBar" HorizontalAlignment="Left" Width="60" DockPanel.Dock="Left" Background="#ffb600">
                <Grid >
                    <!--#ffb600-->
                    <Grid Height="150" VerticalAlignment="Top">
                        <Button x:Name="MenuButton" HorizontalAlignment="Right" VerticalAlignment="Top"
                    Background="{x:Null}" BorderBrush="{x:Null}" Width="60" Height="60"
                    Click="menuButton_Click" Style="{StaticResource MenuStyle}">
                            <Grid HorizontalAlignment="Center" Height="35" Width="40" VerticalAlignment="Center" Background="Transparent">
                                <Rectangle x:Name="rectangle" Width="25" Height="4" Margin="0 5 0 0" Fill="#FF515151" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="-0,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle x:Name="rectangle1" Width="25" Height="4" Margin="0 21 0 0 " Fill="#FF515151" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="-0,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle x:Name="rectangle2" Width="25" Height="4" Margin="0 13 0 0" Fill="#FF515151" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                            </Grid>
                        </Button>
                    </Grid>
                    <ListView Name="menuList" ItemContainerStyle="{DynamicResource ListMenuStyle}"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden"
                              Foreground="#fff" FontSize="20" SelectedIndex="0"  SelectionMode="Single" Margin="0 150 0 0"
                              Background="Transparent" BorderThickness="0" Padding="0" PreviewMouseLeftButtonUp="selectedTab">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding Icon, Converter={StaticResource converter} }" Width="32" Height="32" Margin="5 10" VerticalAlignment="top" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality"/>
                                    <TextBlock Text="{Binding Content}" VerticalAlignment="Center" Margin="10"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Grid>
            <!--<ScrollViewer x:Name="aboutUsPageScrollViewer" Visibility="Collapsed" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" MaxHeight="1500">-->
            <Frame Name="menuPage" Visibility="Collapsed" NavigationUIVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled"/>
                <!--<Frame Name="aboutUsPage" Visibility="Collapsed" NavigationUIVisibility="Hidden"/>-->
            <!--</ScrollViewer>-->
        </DockPanel>
    </Border>
</Window>
